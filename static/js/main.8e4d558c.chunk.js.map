{"version":3,"sources":["components/Searchusers.jsx","components/Followers.jsx","components/Photos/gitPhoto.png","components/Toggle.js","components/Search.jsx","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchUsers","user","a","url","fetch","response","json","Searchusers","username","useState","Data","setData","repository","setrepository","organization","setOrganization","repos","then","res","console","log","fetchOrganization","link_1","response_1","useEffect","error","showData","login","public_repos","avatar_url","message","followers","following","className","undefined","src","length","map","index","name","to","Followers","data","popularUsers","setpopularUsers","setrepos","URL","fetchUsersrepos","id","target","href","type","Darkmode","props","checkboxclick","state","boolean","document","getElementById","style","cssText","setState","onClick","this","htmlFor","Component","Search","userLink","setuserLink","items","GitPhoto","alt","onChange","e","value","placeholder","Home","match","params","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"6XASMA,G,MAAU,uCAAE,WAAMC,GAAN,iBAAAC,EAAA,6DACVC,EADU,uCAC0BF,EAD1B,sBAJF,uBAIE,0BAHE,4CAGF,SAEOG,MAAMD,GAFb,cAEVE,EAFU,yBAGTA,EAASC,QAHA,2CAAF,uDAsFDC,EA/EK,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAAa,EAEVC,mBAAS,IAFC,mBAExBC,EAFwB,KAEnBC,EAFmB,OAGEF,mBAAS,IAHX,mBAGxBG,EAHwB,KAGbC,EAHa,OAIMJ,mBAAS,IAJf,mBAIxBK,EAJwB,KAIXC,EAJW,KAmBzBC,EAAK,uCAAE,8BAAAd,EAAA,sEAECC,EAFD,uCAEuCK,EAFvC,8BAGkBJ,MAAMD,GAHxB,OAGCE,EAHD,OAIUA,EAASC,OAAOW,MAAK,SAACC,GAAOL,EAAcK,MAJrD,gDAMLC,QAAQC,IAAR,MANK,yDAAF,qDAULC,EAAiB,uCAAE,8BAAAnB,EAAA,sEAEXoB,EAFW,uCAE8Bd,EAF9B,kBAGQJ,MAAMkB,GAHd,OAGXC,EAHW,OAICA,EAAWjB,OAAOW,MAAK,SAACC,GAAOH,EAAgBG,MAJhD,gDAMjBC,QAAQC,IAAR,MANiB,yDAAF,qDAWvBI,qBAAU,YAlCK,WACZ,IAEKxB,EAAWQ,GAAUS,MAAK,SAACC,GACvBP,EAAQO,MAIf,MAAOO,GACPN,QAAQC,IAAIK,IA0BbC,GACAV,IACAK,MACD,IA5C4B,IA8CxBM,EAAsEjB,EAAtEiB,MAAQC,EAA8DlB,EAA9DkB,aAA0BC,GAAoCnB,EAA9CoB,QAA8CpB,EAApCmB,YAAaE,EAAuBrB,EAAvBqB,UAAUC,EAAatB,EAAbsB,UAC/D,OAEG,qBAAKC,UAAU,gBAAf,cACeC,IAAVP,EACD,sBAAKM,UAAU,qBAAf,UACI,oBAAIA,UAAU,sBAAd,uDACA,qBAAKE,IAAKN,IACV,sBAAKI,UAAU,iBAAf,UACI,uCAAUN,KACV,sDAAyBC,KACzB,mDAAsBG,KACtB,mDAAsBC,KACtB,+CAA0C,IAAvBlB,EAAasB,OAAc,mBAAmBtB,EAAa,GAAGa,SACjF,gDAAyC,IAAtBf,EAAWwB,OAAexB,EAAWyB,KAAI,SAACpC,EAAKqC,GAAN,OAAc,+BAAoBrC,EAAKsC,MAAdD,MAA4B,WAErH,qBAAKL,UAAU,qBAAf,SACI,wBAAQA,UAAU,WAAlB,SAA8B,cAAC,IAAD,CAAMA,UAAU,YAAYO,GAAG,IAA/B,8BAGpC,gCACE,mBAAGP,UAAU,QAAb,uBACA,mBAAGA,UAAU,YAAb,qDACA,qBAAKA,UAAU,+BAAf,SACI,wBAAQA,UAAU,WAAlB,SAA8B,cAAC,IAAD,CAAMA,UAAU,YAAYO,GAAG,IAA/B,iCC7CnCC,G,MAlCG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EAIajC,mBAAS,IAJtB,mBAInBkC,EAJmB,KAINC,EAJM,OAKHnC,mBAAS,CAAC,KALP,mBAKnBO,EALmB,KAKb6B,EALa,KAOpB7C,EAAU,uCAAE,8BAAAE,EAAA,6DACR4C,EAAIJ,EAAKvC,IADD,SAESC,MAAM0C,GAFf,OAERzC,EAFQ,OAGCA,EAASC,OAAOW,MAAK,SAACC,GAAO0B,EAAgB1B,MAH9C,2CAAF,qDAMV6B,EAAe,uCAAE,8BAAA7C,EAAA,6DACb4C,EADa,uCACyBJ,EAAKf,MAD9B,8BAEIvB,MAAM0C,GAFV,OAEbzC,EAFa,OAGJA,EAASC,OAAOW,MAAK,SAACC,GAAO2B,EAAS3B,MAHlC,2CAAF,qDAWrB,OAJAM,qBAAU,WACNxB,IACA+C,MACF,IAEE,sBAAKC,GAAG,sBAAsBf,UAAU,sBAAxC,UACI,qBAAKE,IAAKQ,EAAad,aACvB,uCAAS,oBAAGoB,OAAO,QAAQC,KAAI,6BAAwBP,EAAahB,OAA3D,cAAsEgB,EAAaJ,KAAnF,OAAT,OACA,uCAAUI,EAAaQ,QACvB,gDAAoBnC,EAAMqB,KAAI,SAACpC,EAAOqC,GAAR,OAAgB,+BAAoBrC,EAAKsC,MAAdD,cCpCtD,G,MAAA,IAA0B,sCCIpBc,G,wDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,cAAc,WACV,OAAO,EAAKC,MAAMC,SACd,KAAK,EACDC,SAASC,eAAe,iBAAiBC,MAAMC,QAAQ,sGACvD,EAAKC,SAAS,CACVL,SAAQ,IAEZ,MAEJ,KAAK,EACDC,SAASC,eAAe,iBAAiBC,MAAMC,QAAQ,oGACvD,EAAKC,SAAS,CACVL,SAAQ,MAjBpB,EAAKD,MAAM,CACPC,SAAQ,GAHE,E,qDA4Bd,OACF,sBAAKvB,UAAU,kBAAf,UACM,uBAAOkB,KAAK,WAAWlB,UAAU,WAAWe,GAAG,WAAWc,QAASC,KAAKT,gBACxE,uBAAOU,QAAQ,WAAW/B,UAAU,QAApC,SAEI,qBAAKA,UAAU,kB,GAnCOgC,cCoDvBC,EAjDF,WAAK,MAMyBzD,mBAAS,IANlC,mBAMPkC,EANO,KAMMC,EANN,OAOiBnC,mBAAS,MAP1B,mBAOP0D,EAPO,KAOEC,EAPF,KAQRpE,EAAU,uCAAE,4BAAAE,EAAA,0IAGaE,MAHb,mEAGJC,EAHI,OAIKA,EAASC,OAAOW,MAAK,SAACC,GAAO0B,EAAgB1B,MAJlD,gDAMZC,QAAQC,IAAR,MANY,yDAAF,qDASPiD,EAAS1B,EAAT0B,MAKT,OAJE7C,qBAAU,WACRxB,MACC,IAGD,sBAAKiC,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAWE,IAAKmC,EAAUC,IAAI,gBAC7C,2DACA,6FACA,sBAAKtC,UAAU,gBAAf,UACI,uBAAOe,GAAG,QAAQwB,SAAU,SAACC,GAAKL,EAAYK,EAAExB,OAAOyB,QAASvB,KAAK,OAAOZ,KAAK,GAAGN,UAAU,aAAa0C,YAAY,wBACvH,cAAC,IAAD,CAAMnC,GAAE,WAAM2B,EAAN,KAAmBlC,UAAU,aAArC,SACI,mBAAGA,UAAU,uBAGrB,qBAAIA,UAAU,wBAAd,sBAAgD,2CAAhD,YACA,oBAAIA,UAAU,iBAAd,6BACA,cAAC,EAAD,IACA,qBAAKe,GAAG,gBAAgBf,UAAU,gBAAlC,SAEQoC,EACAA,EAAMhC,KAAI,SAACpC,EAAKqC,GAAN,OACN,cAAC,EAAD,CAAuBI,KAAMzC,GAAbqC,MAClB,OAGV,2EC/CSsC,E,uKAEb,IAAMpE,EAAUuD,KAAKV,MAAMwB,MAAMC,OAAOtE,SAAUuD,KAAKV,MAAMwB,MAAMC,OAAOtE,SAAS,KAGnF,OACI,8BACkB,OAAbA,EAAoB,cAAC,EAAD,IAAa,cAAC,EAAD,CAAaA,SAAUA,EAAUP,KAAK,W,GAPtDgE,aCclBc,EAZJ,WAEN,OACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC7B,GAAD,OAAY,cAAC,EAAD,eAAUA,OACpD,cAAC,IAAD,CAAQ4B,KAAK,cAAcC,OAAQ,SAAC7B,GAAD,OAAY,cAAC,EAAD,eAAUA,aCApD8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.8e4d558c.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './Css/searchedUsers.css';\r\n\r\n\r\nconst client_id='43dc76f11d784e8aea4d';\r\nconst client_secret='c3be2176acb314b350b8aea2871b18240dc8f70b';\r\n\r\n\r\nconst fetchUsers= async(user)=>{\r\n  const url=`https://api.github.com/users/${user}?client_id=${client_id}&client_secret=${client_secret}`;\r\n  const response = await fetch(url);\r\n  return response.json();\r\n}\r\n\r\n\r\nconst Searchusers = ({username })=>{\r\n  \r\n    const [Data,setData]=useState({});\r\n    const [repository,setrepository]=useState([]);\r\n    const [organization,setOrganization]=useState([]);\r\n\r\n    const showData=()=>{\r\n       try {\r\n      \r\n            fetchUsers(username).then((res)=>{\r\n                setData(res);\r\n\r\n            })  \r\n        \r\n       } catch (error) {\r\n         console.log(error);  \r\n       }\r\n        \r\n    }\r\n    const repos= async()=>{  \r\n        try {\r\n            const url = `https://api.github.com/users/${username}/repos?per_page=3`\r\n            const response = await fetch(url);\r\n            const result = response.json().then((res)=>{setrepository(res); });      \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n   \r\n    const fetchOrganization= async()=>{  \r\n        try { \r\n            const link_1 = `https://api.github.com/users/${username}/orgs`\r\n            const response_1 = await fetch(link_1);\r\n            const finaldata = response_1.json().then((res)=>{setOrganization(res);});   \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        showData();\r\n        repos();\r\n        fetchOrganization();\r\n    }, [])\r\n\r\n    const {login , public_repos  , message , avatar_url , followers,following} = Data;\r\n     return (\r\n        \r\n        <div className='searchedUsers' >\r\n            {login !== undefined ? \r\n            <div className='searchedUsers-info' >\r\n                <h1 className='most-important-user' >The most important information about User</h1>\r\n                <img src={avatar_url} ></img>\r\n                <div className='info-container' >\r\n                    <p>Name: {login}</p>\r\n                    <p>Public repos number: {public_repos}</p>\r\n                    <p>followers Number: {followers}</p>\r\n                    <p>following Number: {following}</p>\r\n                    <p>Organization: { organization.length=== 0 ? ' no organization':organization[0].login}</p>\r\n                    <p> Public repos: {repository.length !== 0 ? repository.map((user,index)=><span key={index} >{user.name}</span>):null}</p>\r\n                </div>\r\n                <div className='home-btn-container' >\r\n                    <button className='home-btn' ><Link className='home-link' to='/'>Home page</Link></button>\r\n                </div> \r\n            </div>\r\n            : <div>\r\n                <p className='error' >404 Error</p>\r\n                <p className='not-exist' >Unfortunately this User does not exist </p>\r\n                <div className='home-btn-container error-btn' >\r\n                    <button className='home-btn' ><Link className='home-link' to='/'>Home page</Link></button>\r\n                </div>\r\n            </div>}\r\n            \r\n        </div>\r\n\r\n    )\r\n        \r\n} \r\nexport default Searchusers\r\n\r\n","import React,{useEffect,useState} from 'react'\r\nimport './Css/followers.css';\r\n\r\n// popularUsers maqvs shenaxuli is infromacia rac mchirdeba\r\n\r\n// https://api.github.com/users/GioDziko/repos?per_page=1   Public repos\r\n\r\nconst Followers = ({data}) => {\r\n    \r\n    const client_id='43dc76f11d784e8aea4d';\r\n    const client_secret='c3be2176acb314b350b8aea2871b18240dc8f70b';\r\n    const [popularUsers,setpopularUsers] = useState([]);\r\n    const [repos,setrepos]=useState(['']);\r\n\r\n    const fetchUsers= async()=>{  \r\n        const URL=data.url;  \r\n        const response = await fetch(URL);\r\n        const result = response.json().then((res)=>{setpopularUsers(res);});   \r\n    }\r\n    \r\n    const fetchUsersrepos= async()=>{  \r\n        const URL = `https://api.github.com/users/${data.login}/repos?per_page=3`\r\n        const response = await fetch(URL);\r\n        const result = response.json().then((res)=>{setrepos(res); });   \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n        fetchUsersrepos();\r\n    },[])\r\n    return (\r\n        <div id='followers-container' className='followers-container' >\r\n            <img src={popularUsers.avatar_url} ></img>\r\n            <p>name: <a target='blank' href={`https://github.com/${popularUsers.login}`}> {popularUsers.name} </a> </p>\r\n            <p>type: {popularUsers.type}</p>\r\n            <p> Public repos: { repos.map((user , index)=><span key={index} >{user.name}</span>)}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Followers\r\n","export default __webpack_public_path__ + \"static/media/gitPhoto.0765cc93.png\";","import React,{Component} from \"react\";\r\n\r\nimport \"./Css/toggle.css\"\r\n\r\nexport default class Darkmode extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            boolean:false\r\n        }\r\n    }\r\n\r\n    checkboxclick=()=>{\r\n        switch(this.state.boolean){\r\n            case true:{\r\n                document.getElementById(\"popular-users\").style.cssText=\"margin-top:30px;idth:80%; display:grid;grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\"\r\n                this.setState({\r\n                    boolean:false\r\n                });\r\n                break;\r\n            }\r\n            case false:{\r\n                document.getElementById(\"popular-users\").style.cssText=\"margin-top:30px;display:flex; flex-direction:column; justify-content: center;align-items: center;\"\r\n                this.setState({\r\n                    boolean:true\r\n                });\r\n                break;\r\n            }\r\n        }    \r\n    }\r\n\r\n    \r\n    render(){\r\n        return(   \r\n      <div className=\"darkmode_button\" >\r\n            <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\" onClick={this.checkboxclick} />\r\n            <label htmlFor=\"checkbox\" className=\"label\" >\r\n                \r\n                <div className=\"ball\"></div>\r\n            </label>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Followers from './Followers';\r\nimport './Css/search.css';\r\nimport GitPhoto from './Photos/gitPhoto.png'\r\nimport Toggle from './Toggle';\r\n\r\nconst Search=()=> {\r\n    \r\n    // const client_id='43dc76f11d784e8aea4d';\r\n    // const client_secret='c3be2176acb314b350b8aea2871b18240dc8f70b';\r\n \r\n\r\n    const [popularUsers,setpopularUsers] = useState([]);\r\n    const [userLink,setuserLink] = useState(null);\r\n    const fetchUsers= async()=>{\r\n        try {\r\n            const URL=`https://api.github.com/search/users?q=followers:%3E35000`\r\n            const response = await fetch(URL);\r\n            const result = response.json().then((res)=>{setpopularUsers(res); });\r\n        } catch (error) {\r\n          console.log(error)  \r\n        }\r\n      }\r\n      const {items} = popularUsers;\r\n      useEffect(() => {\r\n        fetchUsers();\r\n      }, [])\r\n      \r\n    return (\r\n        <div className='home-page' >\r\n            <img className='git-logo' src={GitPhoto} alt='Github logo' ></img>\r\n            <h1>Profile Finder for Github</h1>\r\n            <h3>Check out the Users public information just by one Click ! </h3>\r\n            <div className=\"btn-container\">\r\n                <input id='input' onChange={(e)=>{setuserLink(e.target.value)}} type=\"text\" name=\"\" className=\"input-text\" placeholder=\"Enter a Username...\"/>\r\n                <Link to={`/${userLink}/`} className=\"input-icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </Link>\r\n            </div>\r\n            <h1 className='popular-users-caption' >The most <span>Popular</span> users</h1>\r\n            <h4 className='switch-caption' >switch the view</h4>\r\n            <Toggle/>\r\n            <div id='popular-users' className='popular-users'>\r\n                {\r\n                    items?\r\n                    items.map((user,index)=>\r\n                        <Followers key={index} data={user}/> \r\n                    ):null \r\n                }\r\n            </div>\r\n            <footer>Created by Giorgi Dzirkvelishvili</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{Component} from 'react';\r\nimport Searchusers from './Searchusers';\r\nimport Search from './Search';\r\n\r\nexport default class Home extends Component {\r\n    render(){\r\n        const username=(this.props.match.params.username)?this.props.match.params.username:null;\r\n        \r\n        \r\n        return(\r\n            <div> \r\n                {username === null ? <Search /> : <Searchusers username={username} user=''/> } \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport Home from './components/Home';\n\n\n  const App=()=> {\n\n      return (\n      <Router>\n        <Switch>\n          <Route exact path='/' render={(props) => (<Home {...props} />)}/>\n          <Route  path='/:username/' render={(props) => (<Home {...props}  />)}/>\n        </Switch>\n      </Router>\n    );\n  }\n\nexport default  App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}